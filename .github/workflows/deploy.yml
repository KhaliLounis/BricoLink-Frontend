name: Deploy Next.js App and Publish Docker Image

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up SSH for secure communication with the VPS
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      # Step 3: Deploy and restart frontend using PM2 on the VPS
      - name: Deploy and restart frontend with PM2
        run: |
          # Copy the source code to the VPS
          rsync -avz --delete \
            -e "ssh -i ~/.ssh/id_rsa" \
            --exclude='node_modules' \
            --exclude='.next' \
            --exclude='out' \
            ./ \
            ${{ secrets.SSH_USER }}@${{ secrets.VPS_HOST }}:${{ secrets.DEPLOY_PATH }}/

          # Install dependencies, build, and start the Next.js app using PM2
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.VPS_HOST }} "\
            # Load nvm and set up the environment properly
            export NVM_DIR=\$HOME/.nvm && \
            source \$NVM_DIR/nvm.sh && \
            nvm use default && \

            # Install dependencies, build, and start the Next.js app
            cd ${{ secrets.DEPLOY_PATH }} && \
            npm install && \
            npm run build && \

            # Use PM2 to manage the app and ensure it starts on reboot
            pm2 delete $(pm2 list | grep bricolink-frontend | awk '{print $2}') || true && \
            pm2 start npm --name 'bricolink-frontend' -- start && \
            pm2 save \
          "

  build_and_push_docker:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: khalilounis
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 4: Build and push the Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: khalilounis/bricolink-app:latest
